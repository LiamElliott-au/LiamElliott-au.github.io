<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>async on Liam Elliott</title>
    <link>https://drafts.liamelliott.me/tags/async/</link>
    <description>Recent content in async on Liam Elliott</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 May 2018 00:52:00 +0000</lastBuildDate><atom:link href="https://drafts.liamelliott.me/tags/async/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Angular: arrrgh... too many async bindings</title>
      <link>https://drafts.liamelliott.me/coding/2018-05-01-angular-too-many-async-bindings/</link>
      <pubDate>Tue, 01 May 2018 00:52:00 +0000</pubDate>
      
      <guid>https://drafts.liamelliott.me/coding/2018-05-01-angular-too-many-async-bindings/</guid>
      <description>In my previous post I came across a quirk with Angular, Observables and the Async pipe. That is, each subscription to an observable will initiate the observables execution. Hence we were calling the api once per async subscription.
 A subscribe call is simply a way to start an &amp;ldquo;Observable execution&amp;rdquo; and deliver values or events to an Observer of that execution. http://reactivex.io
 Original version &amp;lt;p&amp;gt;{{ (result$ | async).name }}&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;{{ (result$ | async).</description>
    </item>
    
  </channel>
</rss>
